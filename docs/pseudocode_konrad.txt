// Using Bad-SUDO CUSTOM EXTENDED Source==>https://github.com/jajavaa/Bad-SUDO
// SUDO CODE NOT COMPLETE.

CLASS Grants :

    UNIQUE OPEN INTEGER fee EQUALS 3000
    STRING id EQUALS NULL
    STRING name EQUALS NULL
    STRING ARRAY subjects EQUALS (Software Development, Mathematics, Learning to Learn, Computer Architecture)
    INTEGER ARRAY mark EQUALS SIZE OF THIS IS subjects LENGTH

    NEW OBJECT ArrayList OF DATATYPE Student NAMED studentArray EQUALS DO ArrayList ()

    PROGRAM_INIT () :
        DO auth ()
        PROGRAM QUIT
    END METHOD

    auth () :
        STRING user EQUALS ""
        STRING password EQUALS ""
        FOR LOOP INTEGER i EQUALS 3, i EQUAL TO 0, POST- i:
            PRINT "You have " + i + " ATTEMPTS TO LOG IN."
            PRINT "Enter username: "
            user EQUALS user input
            PRINT "Enter password: "
            password EQUALS user input
            IF username MATCHES "username" AND password MATCHES "password":
                DO landing ()
            ELSE:
                CONTINUE
        FOR LOOP END
    METHOD END

    landing () :
        STRING choice EQUALS ""
        WHILE LOOP IF choice MATCHES ""
            PRINT "\tab\tab Student Finance System"
            PRINT "0. Register Details"
            PRINT "1. Calculate Student Grant"
            PRINT "2. Current Overall Student Average"
            PRINT "3. Fee Data"
            PRINT "4. Grant Category Information"
            PRINT "5. Exit"
            choice EQUALS user input
            IF choice MATCHES "1":
                DO register ()
                DO studentGrant ()
            IF choice MATCHES "2":
                PRINT "Your current overall student average result is: " + DO studentAvg ()
            IF choice MATCHES "3":
                DO FeeData ()
            IF choice MATCHES "4":
                DO GrantCategoryInformation ()
            IF choice MATCHES "5":
                PROGRAM END
            IF choice NOT EQUAL TO (1 AND 2 AND 3 AND 4 AND 5 AND "")
                REPEAT THIS LOOP
        LOOP END
    METHOD END

    register () :
        FOR LOOP INTEGER i EQUALS 0, i LESS THAN 3, POST+ i:
            PRINT "Enter student id: "
            id EQUALS user input
            IF id CHARACTER AT 0 CONTAINS "X":
                 LOOP END
            ELSE IF i EQUALS 3:
                 DO UserValid () :
            ELSE:
                 REPEAT THIS LOOP
            FOR LOOP END
        FOR LOOP INTEGER i EQUALS 0, i LESS THAN 3, POST+ i:
            PRINT "Enter student name: "
                name EQUALS user input
            IF name CONTAINS " ":
                LOOP END
            ELSE IF i EQUALS 3:
                DO UserValid () :
            ELSE:
                CONTINUE
        FOR LOOP END
        FOR LOOP INTEGER i EQUALS 0, i LESS THAN subjects LENGTH, POST+ i:
             PRINT "Subject name: " + subjects POSITION AT i
             PRINT "Subject final mark out of 100: "
             marks POSITION AT i EQUALS user input
        FOR LOOP END
        PRINT "Check that all details are right."
        PRINT "Student ID:" +id
        PRINT "Student name: " +name
        FOR LOOP INTEGER i EQUALS 0, i LESS THAN subjectCount, POST+ i:
             PRINT "Subject: " + subjects POSITION AT i + " Mark: " + marks POSITION AT i
        LOOP END
        PRINT "ENTER 1 to CONFIRM"
        PRINT "ENTER 2 to REPEAT"
        INT choice EQUALS user input
        IF choice EQUAL TO 1:
            RETURN
        ELSE IF choice EQUAL TO 2:
            DO add (NEW OBJECT Student (name )) of
            DO register ()
    METHOD END

    studentGrant () :
        DOUBLE avg EQUALS DO studentAvg ()
        PRINT "Student id: " + id
        PRINT "Student name: " + name
        IF avg MORE OR EQUALS TO 90:
            PRINT "You are eligible for: " + fee DIV 1.0 " which is : 100%"
            DO setGrant(100) IN CLASS Student
        ELSE IF avg LESS THAN 90:
            PRINT "You are eligible for: " + fee DIV .75 " which is : 75%"
            DO setGrant(75) IN CLASS Student
        ELSE IF avg LESS THAN 70:
            PRINT "You are eligible for: " + fee DIV .50 " which is : 50%"
            DO setGrant(50) IN CLASS Student
        ELSE IF avg LESS THAN 50:
            PRINT "You are not eligible for a grant."
            DO setGrant(0) IN CLASS Student
    METHOD END

    RETURNS DOUBLE studentAvg () :
        DOUBLE avg EQUALS 0.0
        FOR LOOP INTEGER i EQUALS 0, I IS LESS THAN marks LENGTH, POST+ i:
            avg ADD EQUALS marks POSITION AT i
        FOR LOOP END
        avg DIV EQUALS marks LENGTH
        IS RETURNING avg
    METHOD END

    feeData () :
         PRINT "Students who registered for grant: " + DO size () OF OBJECT studentArray
         INTEGER received EQUALS 0
         DOUBLE moneySent EQUALS 0
         FOR LOOP THROUGH studentArray
            IF DO getGrantStat IS MORE OR EQUAL TO 50:
                POST+ received
                moneySent ADD EQUALS fee MULTI (DO getGrantStat DIV 100)
         LOOP END
         PRINT "Students who received grant: " + received
         PRINT "Grant money sent out: " + moneySent
    METHOD END

    grantCatInfo () :
        INT full EQUALS 0
        INT threeFourths EQUALS 0
        INT half EQUALS 0
        INT noGrant EQUALS 0
        FOR LOOP THROUGH studentArray
            INT temp EQUALS DO getGrantStat ()
            IF temp EQUAL TO 100
                POST+ full
            ELSE IF temp EQUAL TO 75
                POST+ threefourths
            ELSE IF temp EQUAL TO 50
                POST+ half
            ELSE IF temp EQUAL TO 0
                POST+ noGrant
        FOR LOOP END
        PRINT "Full grant students: " +full
        PRINT "Three fourths grant students: " +threeFourths
        PRINT "Half grant students: " +half
        PRINT "No grant students: " +noGrant
    METHOD END

    UserValid () :
        PRINT "Input is invalid."
    METHOD END
CLASS END

CLASS Student :
    SECRET STRING id EQUALS NULL
    SECRET STRING name EQUALS NULL
    SECRET STRING ARRAY subjects EQUALS NULL
    SECRET INTEGER ARRAY marks EQUALS NULL
    SECRET INTEGER grantStat EQUALS 0
    OBJECT Student (STRING id, STRING name, STRING[] subjects, INT[] marks) :
        THIS id EQUALS id
        THIS name EQUALS name
        THIS subjects EQUALS subjects
        THIS marks EQUALS marks
    OBJECT END

    OPEN RETURNS STRING getId () :
        IS RETURNING id
    METHOD END

    OPEN RETURNS STRING getName () :
        IS RETURNING name
    METHOD END

    OPEN RETURNS STRING ARRAY getSubjectArray () :
        IS RETURNING subjects
    METHOD END

    OPEN RETURNS STRING ARRAY getMarkArray () :
        IS RETURNING marks
    METHOD END

    OPEN RETURNS STRING getSubject (INTEGER position) :
        IS RETURNING subjects POSITION AT position
    METHOD END

    OPEN RETURNS INTEGER getMark (INTEGER position) :
        IS RETURNING marks POSITION AT position
    METHOD END

    UNIQUE OPEN setGrant (INTEGER grant) :
        grantStat EQUALS grant
    METHOD END

    UNIQUE OPEN RETURNS INTEGER getGrantStat () :
        IS RETURNING grantStat
    METHOD END

    OPEN printAll () :
        PRINT DO getID ()
        PRINT DO getName ()
        FOR LOOP INTEGER i EQUALS 0, i LESS THAN DO getSubjectArray () LENGTH, POST+ i:
            PRINT "Subject: " + DO getSubject (i) + "Mark: " DO getMark (i)
        FOR LOOP END
        IF DO getGrantStat () EQUAL TO 0:
            PRINT "Grant not issued."
        ELSE:
            PRINT "Grant issued with: " + DO getGrantStat () + "%"
    METHOD END
CLASS END